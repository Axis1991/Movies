@inject IJSRuntime js
@if (Movies == null)
{
  <img src="https://i.gifer.com/ZZ5H.gif" />
}
else if (Movies.Count == 0)
{   
    <text>"There are no records to show"</text>
}
else
{
    <input type="checkbox" @bind="displayButtons" />
    @foreach (var movie in Movies)
    {
        <IndividualMovie Movie="movie" DisplayButtons="displayButtons" DeleteMovie="DeleteMovie" />
    }
}


@code {
    [Parameter] public List<Movie> Movies { get; set; }
    bool displayButtons = true;

    private async Task DeleteMovie(Movie movie)
    {
        await js.MyFunction("custom message");
        var confirmed = await js.Confirm($"Are you sure you want to delete {movie.Title}?");
        if (confirmed)
        {
            Movies.Remove(movie);
        }
    }
    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized. Movies.Count = " + Movies.Count.ToString());
    }
    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet. Movies.Count = " + Movies.Count.ToString());
    }
    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("OnAfterRender. First render = " + firstRender.ToString());
    }
    protected override bool ShouldRender()
    {
        return true;
    }
}

@*     protected async override Task OnInitializedAsync()
    {
        await Task.Delay(3000); *@
